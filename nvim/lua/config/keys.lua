local map = function(mode, shortcut, cmd, options)
  vim.keymap.set(mode, shortcut, cmd, options or {})
end

map('n', '<Leader>pv', vim.cmd.Ex, { desc = 'Open Explorer File Tree' })
map('n', '<Leader>k', '<CMD>nohlsearch<CR>', { desc = 'Remove Hightlight Search' })
map('n', '<Leader>bd', '<CMD>bufdo bdelete<CR>', { desc = 'Delete Current Buffer' })
map('n', '<C-h>', '<C-w>h', { desc = 'Go To Left Panel' })
map('n', '<C-j>', '<C-w>j', { desc = 'Go To Down Panel' })
map('n', '<C-k>', '<C-w>k', { desc = 'Go To Up Panel' })
map('n', '<C-l>', '<C-w>l', { desc = 'Go To Right Panel' })
map('n', '<C-d>', '<C-d>zz')
map('n', '<C-u>', '<C-u>zz')
map('n', 'n', 'nzzzv', { desc = 'Keep Centered Layout on Search Traveling and Open Folder' })
map('n', 'N', 'Nzzzv', { desc = 'Keep Centered Layout on Search Traveling and Open Folder' })
map('x', '<Leader>p', [["_dP]], { desc = 'Better Way to Paster' })
map('v', 'p', '"_dP', { desc = 'Paste replace visual selection without copying it' })
map('v', '<', '<gv', { desc = 'Keep Selection On Regrouping Tab' })
map('v', '>', '>gv', { desc = 'Keep Selection On Regrouping Tab' })
map('v', 'y', 'myy`y', { desc = 'Maintain the cursor position when yangin a visual selection' })
map('v', 'Y', 'myY`y', { desc = 'Maintain the cursor position when yangin a visual selection' })
map('n', '<Leader>x', '<CMD>!xdg-open %<CR><CR>', { desc = 'Open the current file' })
map('n', '<C-Up>', '<CMD>resize +2<CR>', { desc = 'Resize With Arrows' })
map('n', '<C-Down>', '<CMD>resize -2<CR>', { desc = 'Resize With Arrows' })
map('n', '<C-Left>', '<CMD>vertical resize -2<CR>', { desc = 'Resize With Arrows' })
map('n', '<C-Right>', '<CMD>vertical resize +2<CR>', { desc = 'Resize With Arrows' })
map('i', '<A-j>', '<Esc><CMD>move .+1<CR>==gi', { desc = 'Move Text Up and Down' })
map('i', '<A-k>', '<Esc><CMD>move .-2<CR>==gi', { desc = 'Move Text Up and Down' })
map('x', '<A-j>', "<CMD>move '>+1<CR>gv-gv", { desc = 'Move Text Up and Down' })
map('x', '<A-k>', "<CMD>move '<-2<CR>gv-gv", { desc = 'Move Text Up and Down' })
